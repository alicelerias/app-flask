version: '3'
services:
  frontend:
      build:
        dockerfile: ./docker/front
      ports:
        - "3000:80"
      environment:
        - REACT_APP_API_URL="http://localhost:5000"
        - REACT_APP_HOST="http://localhost:3000"
      depends_on:
        - api
  api:
    build:
      dockerfile: ./docker/api
    ports:
      - "5000:5000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=credor_flask
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
    depends_on:
      - postgres
      - rabbitmq
    command: >
      sh -c "sleep 10 && flask db upgrade && FLASK_DEBUG=True && flask run"

  worker:
    build:
      dockerfile: ./docker/worker
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=credor_flask
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
    depends_on:
      - postgres
      - rabbitmq
      - api
      
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=credor_flask
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
